{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Senou Lynn\\\\code\\\\projects\\\\chat-app-websocket\\\\webSocketClient\\\\src\\\\Home.js\";\nimport React from 'react';\nimport { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socketClient = new W3CWebSocket(\"ws://localhost:8000/\");\nexport default function Home(props) {\n  //   Pushes messaging information\n  function onButtonClicked(value) {\n    if (props.isSocketOpen) {\n      console.log(\"You clicked a button\");\n      socketClient.send(JSON.stringify({\n        type: \"message\",\n        msg: value,\n        user: props.userName\n      }));\n    }\n  }\n\n  console.log(\"props.chatHistory, \", props.chatHistory);\n  let chatDiv;\n\n  if (props.chatHistory !== []) {\n    chatDiv = props.chatHistory.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hello \", props.userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onButtonClicked(\"hello\"),\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Senou Lynn/code/projects/chat-app-websocket/webSocketClient/src/Home.js"],"names":["React","client","w3cwebsocket","W3CWebSocket","socketClient","Home","props","onButtonClicked","value","isSocketOpen","console","log","send","JSON","stringify","type","msg","user","userName","chatHistory","chatDiv","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,YAAY,IAAIC,YAAjC,QAAqD,WAArD;;AAEA,MAAMC,YAAY,GAAG,IAAID,YAAJ,CAAiB,sBAAjB,CAArB;AACA,eAAe,SAASE,IAAT,CAAcC,KAAd,EAAqB;AAEpC;AACA,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAGF,KAAK,CAACG,YAAT,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAP,MAAAA,YAAY,CAACQ,IAAb,CAAkBC,IAAI,CAACC,SAAL,CAAe;AAC7BC,QAAAA,IAAI,EAAC,SADwB;AAE7BC,QAAAA,GAAG,EAAER,KAFwB;AAG7BS,QAAAA,IAAI,EAAEX,KAAK,CAACY;AAHiB,OAAf,CAAlB;AAKH;AAAC;;AAEFR,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCL,KAAK,CAACa,WAAzC;AACA,MAAIC,OAAJ;;AACA,MAAGd,KAAK,CAACa,WAAN,KAAsB,EAAzB,EAA4B;AACxBC,IAAAA,OAAO,GACHd,KAAK,CAACa,WAAN,CAAkBE,GAAlB,CAAsBL,GAAG,iBACrB;AAAA,8BACI;AAAA,kBAAIA,GAAG,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAID,GAAG,CAACA;AAAR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAQH;;AACD,sBACI;AAAA,4BACI;AAAA,2BAAWV,KAAK,CAACY,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEK;AAAQ,MAAA,OAAO,EAAI,MAAMX,eAAe,CAAC,OAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;KAhCuBF,I","sourcesContent":["import React from 'react'\r\nimport { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nconst socketClient = new W3CWebSocket(\"ws://localhost:8000/\");\r\nexport default function Home(props) {\r\n    \r\n//   Pushes messaging information\r\nfunction onButtonClicked(value) {\r\n    if(props.isSocketOpen){\r\n        console.log(\"You clicked a button\")\r\n        socketClient.send(JSON.stringify({\r\n            type:\"message\",\r\n            msg: value,\r\n            user: props.userName\r\n        }))\r\n    }}\r\n\r\n    console.log(\"props.chatHistory, \", props.chatHistory)\r\n    let chatDiv;\r\n    if(props.chatHistory !== []){\r\n        chatDiv = (\r\n            props.chatHistory.map(msg => \r\n                <div>\r\n                    <p>{msg.user}</p>\r\n                    <p>{msg.msg}</p>\r\n                </div> )\r\n        )\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Hello {props.userName}</h2>\r\n             <button onClick = {() => onButtonClicked(\"hello\")}>Send Message</button>\r\n             \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}