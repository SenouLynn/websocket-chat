{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Senou Lynn\\\\code\\\\projects\\\\chat-app-websocket\\\\webSocketClient\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//Dependencies//\nimport React from \"react\";\nimport { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { useEffect, useState, useRef } from \"react\"; //Some bullshit from Ant Designs\n\nimport { Card, Avatar, Input, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport './index.css';\nconst {\n  Search\n} = Input;\nconst {\n  Text\n} = Typography;\nconst {\n  Meta\n} = Card; //Components//\n\nimport Home from \"./Home\";\nimport Login from \"./Login\"; //Define socket\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socketClient = new W3CWebSocket(\"ws://localhost:8000/\");\nexport default function App() {\n  _s();\n\n  //Dont' let anything happen until websocket connection is made\n  let [isOpen, setIsOpen] = useState(false); //Authentication State\n\n  let [userState, setUserState] = useState({\n    \"userName\": '',\n    \"isLoggedIn\": false,\n    \"messages\": []\n  });\n  useEffect(() => {\n    //Open up connection\n    socketClient.onopen = () => {\n      console.log(\"Websocket Client Connected\");\n      setIsOpen(true);\n    };\n\n    socketClient.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('Reply from Server: ', dataFromServer);\n    };\n  }); //<--- Conditionally Render Components--->//\n\n  let loginComponent;\n  userState.isLoggedIn === false ? // loginComponent = <Login /> \n  loginComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Enter Username\",\n      enterButton: \"Go Forth\",\n      size: \"large\",\n      onSearch: value => setUserState({\n        \"userName\": value,\n        isLoggedIn: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this) : loginComponent = /*#__PURE__*/_jsxDEV(Home, {\n    userName: userState.userName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), loginComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QwDdGUuWu5GMY7VRtxjNDGdBt9k=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Senou Lynn/code/projects/chat-app-websocket/webSocketClient/src/App.js"],"names":["React","client","w3cwebsocket","W3CWebSocket","useEffect","useState","useRef","Card","Avatar","Input","Typography","Search","Text","Meta","Home","Login","socketClient","App","isOpen","setIsOpen","userState","setUserState","onopen","console","log","onmessage","message","dataFromServer","JSON","parse","data","loginComponent","isLoggedIn","value","userName"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,YAAY,IAAIC,YAAjC,QAAqD,WAArD;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C,C,CAEA;;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,MAAhD;AACA,OAAO,oBAAP;AACA,OAAO,aAAP;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,KAAnB;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAWF,UAAjB;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAWN,IAAjB,C,CAEA;;AACA,OAAOO,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAIA;;;AACA,MAAMC,YAAY,GAAG,IAAIb,YAAJ,CAAiB,sBAAjB,CAArB;AACA,eAAe,SAASc,GAAT,GAAe;AAAA;;AAC1B;AACA,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAAlC,CAF0B,CAG1B;;AACA,MAAI,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC;AACrC,gBAAY,EADyB;AAErC,kBAAc,KAFuB;AAGrC,gBAAa;AAHwB,GAAD,CAAxC;AASJD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAY,IAAAA,YAAY,CAACM,MAAb,GAAsB,MAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAHD;;AAKAH,IAAAA,YAAY,CAACS,SAAb,GAA0BC,OAAD,IAAa;AAClC,YAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,IAAnB,CAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,cAAnC;AACH,KAHD;AAIH,GAXQ,CAAT,CAb8B,CA4B9B;;AACA,MAAII,cAAJ;AACAX,EAAAA,SAAS,CAACY,UAAV,KAAyB,KAAzB,GACI;AACAD,EAAAA,cAAc,gBACV;AAAA,2BACI,QAAC,MAAD;AACA,MAAA,WAAW,EAAG,gBADd;AAEA,MAAA,WAAW,EAAE,UAFb;AAGA,MAAA,IAAI,EAAC,OAHL;AAIA,MAAA,QAAQ,EAAIE,KAAK,IAAIZ,YAAY,CAAC;AAAC,oBAAYY,KAAb;AAAoBD,QAAAA,UAAU,EAAE;AAAhC,OAAD;AAJjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHR,GAYID,cAAc,gBAAG,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEX,SAAS,CAACc;AAA1B;AAAA;AAAA;AAAA;AAAA,UAZrB;AAaE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEKH,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjDuBd,G;;KAAAA,G","sourcesContent":["//Dependencies//\r\nimport React from \"react\";\r\nimport { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\n//Some bullshit from Ant Designs\r\nimport { Card, Avatar, Input, Typography } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css'\r\n\r\nconst { Search } = Input;\r\nconst { Text } = Typography;\r\nconst { Meta } = Card;\r\n\r\n//Components//\r\nimport Home from \"./Home\"\r\nimport Login from \"./Login\"\r\n\r\n\r\n\r\n//Define socket\r\nconst socketClient = new W3CWebSocket(\"ws://localhost:8000/\");\r\nexport default function App() {\r\n    //Dont' let anything happen until websocket connection is made\r\n    let [isOpen, setIsOpen] = useState(false);\r\n    //Authentication State\r\n    let [userState, setUserState] = useState({\r\n        \"userName\": '',\r\n        \"isLoggedIn\": false,\r\n        \"messages\" : []\r\n\r\n    })\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    //Open up connection\r\n    socketClient.onopen = () => {\r\n        console.log(\"Websocket Client Connected\")\r\n        setIsOpen(true)\r\n    }\r\n\r\n    socketClient.onmessage = (message) => {\r\n        const dataFromServer = JSON.parse(message.data);\r\n        console.log('Reply from Server: ', dataFromServer)\r\n    }\r\n})\r\n\r\n\r\n\r\n//<--- Conditionally Render Components--->//\r\nlet loginComponent;\r\nuserState.isLoggedIn === false ? \r\n    // loginComponent = <Login /> \r\n    loginComponent = (\r\n        <div>\r\n            <Search\r\n            placeholder = \"Enter Username\"\r\n            enterButton= \"Go Forth\"\r\n            size=\"large\"\r\n            onSearch = {value => setUserState({\"userName\": value, isLoggedIn: true})} />\r\n        </div>\r\n    )\r\n    :\r\n    loginComponent = <Home userName={userState.userName}/>\r\n  return (\r\n    <div>\r\n      <h4>Home</h4>\r\n        {loginComponent}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}