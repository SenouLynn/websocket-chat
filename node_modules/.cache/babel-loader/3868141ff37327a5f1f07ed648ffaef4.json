{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Senou Lynn\\\\code\\\\projects\\\\chat-app-websocket\\\\webSocketClient\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\n//Dependencies\nimport React, { useState } from \"react\";\nimport { client, w3cwebsocket as W3CWebSocket } from \"websocket\"; //Some bullshit from Ant Designs\n\nimport { Card, Avatar, Input, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport Search from \"antd/lib/input/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst {\n  Meta\n} = Card; //Web Socket Connection Info\n\nconst socketClient = new W3CWebSocket(\"ws://localhost:8000/\");\nexport default function Home(props) {\n  _s();\n\n  //   Pushes messaging information\n  function onButtonClicked(value) {\n    if (props.isSocketOpen) {\n      console.log(\"You clicked a button\");\n      socketClient.send(JSON.stringify({\n        type: \"message\",\n        msg: value,\n        user: props.userName\n      }));\n    }\n  } //  Chat Div Builder\n\n\n  let chatDiv;\n\n  if (props.chatHistory !== []) {\n    chatDiv = props.chatHistory.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingBottom: 50\n      },\n      id: \"messages\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: 300,\n          margin: \"16px 4px 0 4px\",\n          alignSelf: props.userName === msg.user ? \"flex-end\" : \"flex-start\"\n        },\n        loading: false,\n        children: /*#__PURE__*/_jsxDEV(Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            style: {\n              color: \"#f56a00\",\n              backgroundColor: \"#fde3cf\"\n            },\n            children: msg.user[0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this),\n          title: msg.user + \":\",\n          description: msg.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, msg.msg, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this));\n  } else {\n    chatDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Messages Yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  } //Chat State Updater\n\n\n  let [chatState, setChatState] = useState(\"\"); //Compile\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hello \", props.userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onButtonClicked(\"hello\"),\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), chatDiv, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        placeholder: \"Mesage.........\",\n        enterButton: \"Send\",\n        value: chatState,\n        size: \"large\",\n        onChange: e => setChatState(e.target.value),\n        onSearch: value => onButtonClicked(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"3/HQ690jr/61i8glokjytAB4quI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Senou Lynn/code/projects/chat-app-websocket/webSocketClient/src/Home.js"],"names":["React","useState","client","w3cwebsocket","W3CWebSocket","Card","Avatar","Input","Typography","Search","Text","Meta","socketClient","Home","props","onButtonClicked","value","isSocketOpen","console","log","send","JSON","stringify","type","msg","user","userName","chatDiv","chatHistory","map","display","flexDirection","paddingBottom","width","margin","alignSelf","color","backgroundColor","toUpperCase","chatState","setChatState","e","target"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,YAAY,IAAIC,YAAjC,QAAqD,WAArD,C,CAEA;;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,MAAhD;AACA,OAAO,oBAAP;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWF,UAAjB;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAWN,IAAjB,C,CAEA;;AACA,MAAMO,YAAY,GAAG,IAAIR,YAAJ,CAAiB,sBAAjB,CAArB;AACA,eAAe,SAASS,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC;AACA,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAIF,KAAK,CAACG,YAAV,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAP,MAAAA,YAAY,CAACQ,IAAb,CACEC,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,IAAI,EAAE,SADO;AAEbC,QAAAA,GAAG,EAAER,KAFQ;AAGbS,QAAAA,IAAI,EAAEX,KAAK,CAACY;AAHC,OAAf,CADF;AAOD;AACF,GAbiC,CAelC;;;AACA,MAAIC,OAAJ;;AACA,MAAIb,KAAK,CAACc,WAAN,KAAsB,EAA1B,EAA8B;AAC5BD,IAAAA,OAAO,GAAGb,KAAK,CAACc,WAAN,CAAkBC,GAAlB,CAAuBL,GAAD,iBAC9B;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,QAAlC;AAA4CC,QAAAA,aAAa,EAAE;AAA3D,OAAZ;AAA6E,MAAA,EAAE,EAAC,UAAhF;AAAA,6BACE,QAAC,IAAD;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,GADF;AAELC,UAAAA,MAAM,EAAE,gBAFH;AAGLC,UAAAA,SAAS,EACPrB,KAAK,CAACY,QAAN,KAAmBF,GAAG,CAACC,IAAvB,GAA8B,UAA9B,GAA2C;AAJxC,SAFT;AAQE,QAAA,OAAO,EAAE,KARX;AAAA,+BAUE,QAAC,IAAD;AACE,UAAA,MAAM,eACJ,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE;AAAEW,cAAAA,KAAK,EAAE,SAAT;AAAoBC,cAAAA,eAAe,EAAE;AAArC,aAAf;AAAA,sBACGb,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYa,WAAZ;AADH;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAME,UAAA,KAAK,EAAEd,GAAG,CAACC,IAAJ,GAAW,GANpB;AAOE,UAAA,WAAW,EAAED,GAAG,CAACA;AAPnB;AAAA;AAAA;AAAA;AAAA;AAVF,SACOA,GAAG,CAACA,GADX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADQ,CAAV;AAwBD,GAzBD,MAyBO;AACLG,IAAAA,OAAO,gBACL;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAhDiC,CAkDlC;;;AACA,MAAI,CAACY,SAAD,EAAYC,YAAZ,IAA4BvC,QAAQ,CAAC,EAAD,CAAxC,CAnDkC,CAqDlC;;AACA,sBACE;AAAA,4BACE;AAAA,2BAAWa,KAAK,CAACY,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMX,eAAe,CAAC,OAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGY,OAHH,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,WAAW,EAAC,iBADd;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,KAAK,EAAEY,SAHT;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,QAAQ,EAAGE,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACC,MAAF,CAAS1B,KAAV,CAL/B;AAME,QAAA,QAAQ,EAAGA,KAAD,IAAWD,eAAe,CAACC,KAAD;AANtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAvEuBH,I;;KAAAA,I","sourcesContent":["//Dependencies\r\nimport React, { useState } from \"react\";\r\nimport { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\n//Some bullshit from Ant Designs\r\nimport { Card, Avatar, Input, Typography } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport Search from \"antd/lib/input/Search\";\r\n\r\nconst { Text } = Typography;\r\nconst { Meta } = Card;\r\n\r\n//Web Socket Connection Info\r\nconst socketClient = new W3CWebSocket(\"ws://localhost:8000/\");\r\nexport default function Home(props) {\r\n  //   Pushes messaging information\r\n  function onButtonClicked(value) {\r\n    if (props.isSocketOpen) {\r\n      console.log(\"You clicked a button\");\r\n      socketClient.send(\r\n        JSON.stringify({\r\n          type: \"message\",\r\n          msg: value,\r\n          user: props.userName,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  //  Chat Div Builder\r\n  let chatDiv;\r\n  if (props.chatHistory !== []) {\r\n    chatDiv = props.chatHistory.map((msg) => (\r\n      <div style={{ display: 'flex', flexDirection: 'column', paddingBottom: 50 }} id=\"messages\">\r\n        <Card\r\n          key={msg.msg}\r\n          style={{\r\n            width: 300,\r\n            margin: \"16px 4px 0 4px\",\r\n            alignSelf:\r\n              props.userName === msg.user ? \"flex-end\" : \"flex-start\",\r\n          }}\r\n          loading={false}\r\n        >\r\n          <Meta\r\n            avatar={\r\n              <Avatar style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}>\r\n                {msg.user[0].toUpperCase()}\r\n              </Avatar>\r\n            }\r\n            title={msg.user + \":\"}\r\n            description={msg.msg}\r\n          />\r\n        </Card>\r\n      </div>\r\n    ));\r\n  } else {\r\n    chatDiv = (\r\n      <div>\r\n        <p>No Messages Yet!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //Chat State Updater\r\n  let [chatState, setChatState] = useState(\"\");\r\n\r\n  //Compile\r\n  return (\r\n    <div>\r\n      <h2>Hello {props.userName}</h2>\r\n      <button onClick={() => onButtonClicked(\"hello\")}>Send Message</button>\r\n      {chatDiv}\r\n      <div className=\"bottom\">\r\n        <Search\r\n          placeholder=\"Mesage.........\"\r\n          enterButton=\"Send\"\r\n          value={chatState}\r\n          size=\"large\"\r\n          onChange={(e) => setChatState(e.target.value)}\r\n          onSearch={(value) => onButtonClicked(value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}